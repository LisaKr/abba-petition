create a new empty table users with data from registration (users)
get info by email when they try to log in, hash newly entered password and compare to the stored hash


add middleware to prevent clickjacking

app.use(function(req,res,next){
    res.setHeader("X-Frame-Options", "DENY");
    next();
});

after form is submitted we call hash function and get back the hash.

/ is the register page, register.handlebars, two routes, get and post. get route renders the template,
post route where data goes to after form is submitted, we put data in database AFTER PASSWORD is hashed.
req.body.password gets hashed ()bcrypt then database insrt) and redirect if doesnt work we show error. redirect to the petition
and delete first and last name

after registration you need to treat them as logged in. after inserting the data and before redirecting you need to update
the session with the users id
use the presence of the user id in the session to determine whether or not they are logged in

req.session.userId = results.rows[0].id

/petition
if (!req.session.userID) {
res.redirect(/register)
}

login page needs a post and get. post body has email and password. pass email to the function that does a database query. select * fron user where email == $1
if there is none its an ERROR
if there is no error req.session.userId = rows[0].id
call bcrypt cmpare trq.body.password and th hash from database, redirect to petition

on every route check for cookie and if they are not already going for login/registration then redirect
